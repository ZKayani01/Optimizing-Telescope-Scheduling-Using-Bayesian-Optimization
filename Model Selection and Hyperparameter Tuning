from sklearn.ensemble import RandomForestRegressor
from sklearn.metrics import mean_squared_error
from skopt import BayesSearchCV

# Define the model
model = RandomForestRegressor(random_state=42)

# Define the parameter space for Bayesian Optimization
param_space = {
    'n_estimators': (10, 200),
    'max_depth': (1, 50),
    'min_samples_split': (2, 10),
    'min_samples_leaf': (1, 10),
    'max_features': ('auto', 'sqrt', 'log2')
}

# Perform Bayesian Optimization
bayes_search = BayesSearchCV(estimator=model, search_spaces=param_space, n_iter=32, cv=3, scoring='neg_mean_squared_error', random_state=42)
bayes_search.fit(X_train, y_train)

# Best model
best_model = bayes_search.best_estimator_

# Evaluate on validation set
y_pred_val = best_model.predict(X_val)
val_mse = mean_squared_error(y_val, y_pred_val)
print(f'Validation MSE: {val_mse}')
